% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/strayr.R
\name{strayr}
\alias{strayr}
\title{Convert Australian state names and abbreviations into a consistent format}
\usage{
strayr(x, to = "state_abbr", fuzzy_match = TRUE, max_dist = 0.4,
  method = "jw")
}
\arguments{
\item{x}{a (character) vector containing Australian state names or abbreviations or
a (numeric) vector containing state codes (see [the ABS website](https://www.abs.gov.au/ausstats/abs@.nsf/Lookup/by%20Subject/1270.0.55.001~July%202016~Main%20Features~Australia%20(AUS)%20and%20State%20%7C%20Territory%20(S%7CT)~10017)).
Note that strayr always returns a character vector.}

\item{to}{what form should the state names be converted to? Options are
"state_name", "state_abbr" (the default), "iso", "postal", and "code".}

\item{fuzzy_match}{logical; either TRUE (the default) which indicates that
approximate/fuzzy string matching should be used, or FALSE which indicates that
only exact matches should be used.}

\item{max_dist}{numeric, sets the maximum acceptable distance between your
string and the matched string. Default is 0.4. Only relevant when fuzzy_match is TRUE.}

\item{method}{the method used for approximate/fuzzy string matching. Default
is "jw", the Jaro-Winker distance; see `??stringdist-metrics` for more options.}
}
\value{
a character vector
}
\description{
Convert Australian state names and abbreviations into a consistent format
}
\examples{

x <- c("western Straya", "w. A ", "new soth wailes", "SA", "tazz")

# Convert the above to state abbreviations
strayr(x)

# Convert the elements of `x` to state names

strayr(x, to = "state_name")

# Disable fuzzy matching; you'll get NAs unless exact matches can be found

strayr(x, fuzzy_match = FALSE)

# You can use strayr in a dplyr mutate call

x_df <- data.frame(state = x, stringsAsFactors = FALSE)

\dontrun{x_df \%>\% mutate(state_abbr = strayr(state))}

}
